services:
  web:
    build: .
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - webhook_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build: .
    command: celery -A app.tasks worker --loglevel=info -Q webhook-queue,cleanup-queue --pool=solo
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - webhook_network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.tasks", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  beat:
    build: .
    command: celery -A app.tasks beat --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - webhook_network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.tasks", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - webhook_network

  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
    - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - webhook_network

  test-server:
    build: .
    command: python test_server.py
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - webhook_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  webhook_network:
    driver: bridge
    name: webhook_network

volumes:
  postgres_data:
    name: webhook_postgres_data
